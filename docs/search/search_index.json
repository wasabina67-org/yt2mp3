{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":""},{"location":"src/adjust_audio_volume/","title":"src/adjust_audio_volume.py","text":"Source code in <code>src/adjust_audio_volume.py</code> <pre><code>def main():\n    src_dir = \"output\"\n    dest_dir = \"output_adjusted\"\n    target_dbfs = -14\n\n    for filename in os.listdir(src_dir):\n        if filename.endswith(\".mp3\"):\n            src_path = os.path.join(src_dir, filename)\n            dest_path = os.path.join(dest_dir, filename)\n\n            audio = AudioSegment.from_mp3(src_path)\n            current_dbfs = audio.dBFS\n            adjusted_audio = audio.apply_gain(target_dbfs - current_dbfs)\n            adjusted_audio.export(dest_path, format=\"mp3\")\n\n            src_id3 = ID3(src_path)\n            dest_id3 = ID3(dest_path)\n            dest_id3.update(src_id3)\n            dest_id3.save()\n</code></pre>"},{"location":"src/run/","title":"src/run.py","text":"Source code in <code>src/run.py</code> <pre><code>def set_artwork(videoid, mp3_file_path):\n    url = f\"https://img.youtube.com/vi/{videoid}/0.jpg\"\n    artwork_file_path = f\"output/{videoid}.jpg\"\n\n    with request.urlopen(url) as r:\n        data = r.read()\n        with open(artwork_file_path, mode=\"wb\") as o:\n            o.write(data)\n\n    with Image.open(artwork_file_path) as img:\n        resized_img = img.resize((300, 300))\n        resized_img.save(artwork_file_path)\n\n    with open(artwork_file_path, mode=\"rb\") as r:\n        data = r.read()\n        tags = ID3(mp3_file_path)\n        tags.add(APIC(mime=\"image/jpeg\", type=3, data=data))\n        tags.save()\n\n    os.remove(artwork_file_path)\n</code></pre> Source code in <code>src/run.py</code> <pre><code>def set_metadata(metadata, mp3_file_path):\n    tags = EasyID3(mp3_file_path)\n    tags[\"title\"] = metadata[\"title\"]\n    tags[\"artist\"] = metadata[\"artist\"]\n    tags.save()\n</code></pre> Source code in <code>src/run.py</code> <pre><code>def main():\n    if not validate_yt_list():\n        raise RuntimeError(\"Validation failed.\")\n\n    for item in yt_list:\n        videoid = item[\"id\"]\n        output_videoid = f\"output/{videoid}\"\n        mp3_file_path = output_videoid + \".mp3\"\n\n        if os.path.isfile(mp3_file_path):\n            continue\n\n        url = f\"https://i.ytimg.com/vi/{videoid}/hqdefault.jpg\"\n        if check_video_deletion(url):\n            raise RuntimeError(\n                f\"The Thumbnail Image URL returned a 404 status. ({videoid})\"\n            )\n\n        ydl_opts[\"outtmpl\"] = output_videoid\n        with YoutubeDL(ydl_opts) as ydl:\n            url = f\"https://www.youtube.com/watch?v={videoid}\"\n            retcode = ydl.download([url])\n            if retcode != 0:\n                raise RuntimeError(\n                    f\"Downloading failed with non-zero return code. ({videoid})\"\n                )\n\n            set_metadata(item[\"metadata\"], mp3_file_path)\n            set_artwork(videoid, mp3_file_path)\n</code></pre>"},{"location":"src/utils/","title":"src/utils.py","text":"Source code in <code>src/utils.py</code> <pre><code>def validate_yt_list():\n    seen_ids = set()\n    seen_title_artist = set()\n\n    for item in yt_list:\n        videoid = item.get(\"id\")\n        if not videoid:\n            # None or Empty\n            return False\n        if videoid in seen_ids:\n            # Duplicate\n            return False\n        seen_ids.add(videoid)\n\n        metadata = item.get(\"metadata\")\n        if not metadata:\n            # None or Empty\n            return False\n\n        title = metadata.get(\"title\")\n        if not title:\n            # None or Empty\n            return False\n\n        artist = metadata.get(\"artist\")\n        if not artist:\n            # None or Empty\n            return False\n\n        title_artist = title + artist\n        if title_artist in seen_title_artist:\n            # Duplicate\n            return False\n        seen_title_artist.add(title_artist)\n\n        return True\n</code></pre> Source code in <code>src/utils.py</code> <pre><code>def check_video_deletion(url):\n    resp = requests.head(url)\n    if resp.status_code == 404:\n        return True\n    return False\n</code></pre>"}]}